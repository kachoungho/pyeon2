<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pyeon2.mappers.PosMapper">

	<!-- 발주 신청 메소드 -->
	<insert id="insertOrder">
		insert into orderReq(item_code, item_name, count, category, area)
		values(#{item_code}, #{item_name}, #{count}, #{category}, #{area})
	</insert>
	
	<!-- 물품(재고) 전체 리스트 출력 메소드 -->
	<select id="getList" resultType="com.pyeon2.vo.ItemVO">
		<![CDATA[
			select
  				bno, item_code, item_name, item_image, price, count, hit, category, area
			from
  				(
  					select
    				/*+INDEX_DESC(tbl_board, pk_board)*/
    					rownum rn, bno, item_code, item_name, item_image, price, count, hit, category, area
 					from p2_item
  					where rownum <= #{page} * #{perPageNum}
  					and bno > 0
  				)
			where rn > (#{page} -1) * #{perPageNum} order by bno asc
 		]]>
		<!-- select * from (select ROWNUM num, N.* from (select * from p2_item) N) where num between #{page} and #{perPageNum} -->
	</select>
	
	<!-- 물품(재고) 이름으로 검색하여 리스트 출력 메소드 -->
	<select id="selectName" resultType="com.pyeon2.vo.ItemVO" parameterType="com.pyeon2.vo.SelectSearch">
		<![CDATA[
			select
  				bno, item_code, item_name, item_image, price, count, hit, category, area
			from
  				(
  					select
    				/*+INDEX_DESC(tbl_board, pk_board)*/
    					rownum rn, bno, item_code, item_name, item_image, price, count, hit, category, area
 					from p2_item
  					where rownum <= #{page} * #{perPageNum}
  					and bno > 0
  					and item_name like #{item_name}
  				)
			where rn > (#{page} -1) * #{perPageNum} order by bno asc
 		]]>
	</select>
	
	<!-- 물품 개수 -->
	<select id="getCount" resultType="Integer">
		SELECT count(*) FROM p2_item
	</select>
	
	<!-- 선택된 물품 개수 -->
	<select id="getSelectCount" resultType="Integer" parameterType="com.pyeon2.vo.ItemVO">
		SELECT count(*) FROM p2_item where item_name = #{item_name}
	</select>
	
	<!-- 물품(재고) 제거 메소드 -->
	<delete id="Delete" parameterType="com.pyeon2.vo.ItemVO">
		delete from p2_item where item_code = #{item_code} and area = #{area}
	</delete>
	
	<!-- 알바가 일한 월 -->
	<select id="selectalpayAll" resultType="com.pyeon2.vo.UserVO" parameterType="com.pyeon2.vo.UserVO">
		select userid,year,month,area,sum(hour) as hour,sum(money) as money from p2_userMoney where userid=(SELECT TO_CHAR(NAME) as NAME FROM P2_MEMBER WHERE ID = #{userid}) group by area,userid,year,month order by area,userid,year,month
	</select>
	
	<!-- 알바가 지정한 월 -->
	<select id="selectalpay" resultType="com.pyeon2.vo.UserVO" parameterType="com.pyeon2.vo.UserVO">
		select userid,year,month,area,sum(hour) as hour,sum(money) as money from p2_userMoney where userid=(SELECT TO_CHAR(NAME) as NAME FROM P2_MEMBER WHERE ID = #{userid}) and year=#{year} and month = #{month} group by area,userid,year,month order by area,userid,year,month 
	</select>
	
	<!-- 메니저  -->
	<select id="selectmanpayAll" resultType="com.pyeon2.vo.UserVO" parameterType="com.pyeon2.vo.UserVO">
		select userid,year,month,area,sum(hour) as hour,sum(money) as money from p2_userMoney where area = (SELECT TO_CHAR(area) as area FROM P2_MEMBER WHERE ID = #{userid}) group by area,userid,year,month order by area,userid,year,month 
	</select>
	
	<!-- 메니저  지정 월-->
	<select id="selectmanpay" resultType="com.pyeon2.vo.UserVO" parameterType="com.pyeon2.vo.UserVO">
		select userid,year,month,area,sum(hour) as hour,sum(money) as money from p2_userMoney where year=#{year} and month =#{month} and area = (SELECT TO_CHAR(area) as area FROM P2_MEMBER WHERE ID = #{userid}) group by area,userid,year,month order by area,userid,year,month
	</select>
	
	<!-- 아르바이트 리스트 불러오기 (position=user인 아이들) -->
	<select id="selectUser" resultType="com.pyeon2.vo.MemberVO" parameterType="com.pyeon2.vo.MemberVO">
		select * from p2_member where position = 'user' and area = (select area from p2_member where id = #{id})
	</select>
	
	<!-- 아르바이트 리스트 불러오기 (id만 받아와서) -->
	<select id="selectUserId" resultType="com.pyeon2.vo.MemberVO" parameterType="com.pyeon2.vo.MemberVO">
		select * from p2_member where id = #{id}
	</select>
	
	<!-- 아르바이트생 정보 수정하기 -->
	<update id="updateUser" parameterType="com.pyeon2.vo.MemberVO">
		update p2_member set pwd = #{pwd}, name = #{name}, 
		phone = #{phone}, age = #{age}, address = #{address}, optime = #{optime}
		where id = #{id}
	</update>
	
	<!-- 아르바이트생 정보 삭제하기 -->
	<delete id="deleteUser" parameterType="com.pyeon2.vo.MemberVO">
		delete from p2_member where id = #{id}
	</delete>
	
	<!-- 아르바이트생 권한 삭제하기 -->
	<delete id="deleteRole" parameterType="com.pyeon2.vo.MemberVO">
		delete from roll where id = #{id}
	</delete>
	
	<!-- 아르바이트생 정보 입력 -->
	<insert id="insertUser" parameterType="com.pyeon2.vo.MemberVO">
		insert into p2_member(id, pwd, name, position, phone, age, address, gender, area, optime)
		values(#{id}, #{pwd}, #{name}, #{position}, #{phone}, #{age}, #{address}, #{gender}, #{area}, #{optime})
	</insert>
	
	<!-- 입력된 정보를 바탕으로 권한 자동으로 주기 -->
	<insert id="insertPosition" parameterType="com.pyeon2.vo.MemberVO">
		insert into roll(id, role_name) values(#{id}, #{role_name})
	</insert>
	
</mapper>